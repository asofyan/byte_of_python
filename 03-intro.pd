# Pengenalan 

Python adalah salah satu dari jarangnya bahasa pemrograman yang mampu mengklaim *sederhana* dan *tangguh* secara bersamaan. Anda akan terkejut namun senang melihat bagaimana mudahnya konsentrasi langsung kepada jawaban permasalahan daripada dipusingkan dengan sintaks dan struktur dari bahasa pemrograman yang Anda gunakan.

Secara resmi Python dikenalkan dengan definisi sebagai berikut:

> Python adalah bahasa pemrograman yang mudah dipelajari dan tangguh (powerful). Bahasa ini memiliki struktur data tingkat-tinggi yang efisien dan sederhana, namun punya pendekatan yang efektif untuk pemrograman berbasis objek. Sintaks Python yang elegan dan bersifat dynamic typing (sintaks akan dicek secara langsung tanpa harus menunggu dikompilasi dalam bahasa mesin), dilengkapi dengan interpreter, membuatnya menjadi bahasa pemrograman yang ideal untuk membuat skrip (scripting) dan pengembangan aplikasi secara cepat (rapid application development) di banyak area di platform utama. 

Saya akan mendiskusikan sebagian besar fitur-fitur ini di bagian berikutnya.

Cerita di balik nama

:   Guido van Rossum, pencipta bahasa Python, memberi nama bahasa ini setelah melihat acara BBC "Monty Python's Flying Circus". Dia sendiri tidak terlalu suka dengan ular yang membunuh binatang lain untuk makanan dengan menelan seluruh badan dan meremukkannya. 

## Fitur Python 

### Sederhana

Python adalah bahasa yang minimalis dan sederhana. Membaca program Python sederhana seperti membaca bahasa Inggris, meskipun Inggris yang baku! Watak Python berupa pseudo-code ini adalah kekuatan terbesarnya. Hal tersebut memungkinkan Anda berkonsentrasi kepada solusi terhadap masalah daripada pusing tentang bahasanya sendiri.

### Mudah Dipelajari 

Seperti yang akan Anda lihat, Python sangat mudah untuk dimulai. Python juga memiliki sintaks yang luar biasa mudah, seperti telah disebutkan sebelumnya.

### Bebas dan Open Source 

Python adalah salah satu contoh dari *FLOSS* (Free/Libre and Open Source Software - Perangkat Lunak Bebas dan Terbuka). Dalam bahasa yang sederhana, Anda dapat mendistribusikan perangkat lunak ini secara bebas, membaca kode programnya, membuat perubahan, dan menggunakan sebagian dari program ini untuk program bebas lainnya. FLOSS didasarkan atas konsep komunitas yang berbagi pengetahuan. Ini salah satu alasan kenapa Python sangat bagus - dia dibuat dan diperbaiki secara konstan oleh komunitas yang ingin melihat Python lebih baik.

### Bahasa Tingkat-Tinggi 

Saat Anda menulis program di Python, Anda tidak perlu repot untuk mempelajai detail tingkat-rendah-nya seperti manajemen memori yang digunakan program dan hal-hal tingkat rendah (mendekati bahasa mesin) lainnya. 

### Portabel

Dengan sifatnya yang terbuka (open source), Python telah diporting (disesuaikan agar bisa berjalan di) banyak platform. Seluruh program Python Anda dapat dijalankan dalam platform berikut tanpa perlu diganti, dan jika Anda cukup berhati-hati, dapat terhindar dari fitur yang tergantung dari sistem operasi yang digunakan.

Anda dapat menggunakan Python di Linux, Windows, FreeBSD, Macintosh, Solaris, OS/2, Amita, AROS, AS/400, BeOS, OS/390, z/OS, Palm OS, QNX, VMS, Psion, Acorn RISC OS, VxWorks, PlayStation, Sharp Zaurus, windows CE dan bahkan Pocket PC!

Anda dapat pula menggunakan platform seperti [Kivy](http://kivy.org/) untuk membuat game di iOS (iPhone, iPad) dan Android.

### Diinterpretasikan (Interpreted)

Tentang hal ini perlu sedikit penjelasan.

Program yang ditulis dalam bahasa seperti C atau C++ (sering disebut bahasa yang dikompilasi - compiled language), dikonversi dari kode program C atau C++ ke dalam bahasa yang dapat berbicara oleh komputar Anda (kode biner seperti 0s dan 1s) menggunakan kompiler dengan bermacam penanda dan pilihan. Saat Anda menjalankan program, perangkat lunak penghubung (linker/loeader) menyalin program Anda dari cakram keras ke dalam memori dan mulai menjalankannya.

Python, di sisi lain, tidak perlu dikompilasi menjadi biner. Anda cukuup *jalankan* program langsung dari kode program. Secara internal, Python mengonversi kode program ke dalam bentuk antara yang dinamakan _bytecodes_ dan menerjemahkannya ke dalam bahasa komputer Anda, lalu menjalankannya. Semua ini, sebetulnya, membuat penggunaan Python menjadi lebih mudah. Anda tidak perlu khawatir tentang kompilasi program, dan memastikan pustaka terkait dijalankan, dan hal-hal teknis lainnya. Ini juga membuat program Python Anda lebih portabel. Anda cuma perlu menyalin program Python ke dalam komputer lain dan langsung jalan!

### Berorientasi Objek 

Python mendukung pemrograman berorientasi prosedur (procedure-oriented) sebaik pemrograman berorientasi objek (object-oriented). Dalam bahasa *procedure-oriented*, program dibangun dari rangkaian prosedur atau fungsi, agar dapat digunakan kembali. Dalam bahasa *object-oriented*, program dbuat berdasaran objek yang dikombinasikan data dan metode. Python sangat kuat namun sederhana dalam menjalankan OOP (Object Oriented Programming) terutama jika dibandingkan dengan bahasa besar seperti C++ atau Java.

### Dapat diperluas (Extensible) 

Jika Anda ingin bagian penting dari program dijalankan secara lebih cepat, atau bagian lain berisi algoritma yang bersifat rahasia, Anda dapat membuat bagian dari kode tersebut ke dalam C atau C++ dan menggunakannya ke dalam program Python Anda.

### Dapat disematkan (Embeddable) 

Anda dapat menyematkan Python ke dalam program C/C++ untuk memberi kemampuan 'scripting' bagi pengguna program Anda.

### Pustaka yang Ekstensif 

Pustaka Standar Python (Python Standard Library) sangat banyak. Pustaka tersebut dapat membantu Anda mengerjakan banyak hal mencakup ekspresi regular (regular expressions/REGEX), pembuatan dokumen otomatis, unit testing, threading, basis data, browser web, CGI, FTP, email, XML, XML-RPC, HTML, berkas WAV, kriptografi, GUI (graphical user interface - antar muka pengguna berbentuk grafik) dan hal lain yang bergantung-sistem. Ingat, semua ini tersedia di mana saja saat Python diinstal. Ini filosofi Python yang bernama *Batteries Included* (sudah termasuk batere di dalamnya).

Disamping pustaka standar, ada banyak pustaka berkualitas tinggi lainnya yang dapat Anda temukan di [Python Package Index](http://pypi.python.org/pypi).

Ringkasan

:   Python adalah bahasa yang kuat dan menarik. Bahasa ini punya kombinasi yang tepat antara kinerja dan fitur, yang menjadikan penulisan program di Python sangat mudah dan menyenangkan. 

## Python 2 versus 3

Anda dapat mengabaikan bagian ini jika Anda tidak tertarik perbedaan antara Python 2 dan 3. Tapi mohon perhatikan versi Python yang Anda gunakan.

Buku ini ditulis ulang di tahun 2008 untuk Python 3. Ini adalah buku pertama yang menggunakan Python 3. Hal ini, sayangnya, menyebabkan kebingungan bagi pembaca yang mencoba menggunakan Python 2 dengan contoh Python 3 di buku dan sebaliknya. Tapi lambat laun, dunia masih migrasi ke Python 3.

Jadi, ya, Anda akan belajar menggunakan Python 3 di buku ini, meskipun Anda sangat ingin menggunakan Python 2. *Ingat bahwa sekali Anda paham dan belajar dengan benar terhadap keduanya, Anda dapat lebih mudah belajar perbedaan dari dua versi tersebut dan beradaptasi dengan mudah. Bagian paling sulit adalah belajar pemrograman dan belajar inti dari bahasa Python itu sendiri. Inilah tujaun buku ini, sekali Anda meraih tujuan itu, Anda dapat dengan mudah menggunakan Python 2 atau Python 3 tergantung dari situasi.*

Untuk detail perbedaan Antara Python 2 dan Python 3 lihat [halaman Python/3 di wiki Ubuntu](https://wiki.ubuntu.com/Python/3).

## Apa yang Programmer Katakan 

Mungkin Anda tertarik hacker besar seperti ESR mengatakan sesuatu tentang Python:

(@) *Eric S. Raymond* adalah pengarang buku "The Cathedral and the Bazaar" dan juga orang yang pertama kali mengenalkan istilah *Open Source*. Dia mengatakan bahwa [Python telah menjadi bahasa pemrogaman favoritnya](http://www.linuxjournal.com/article.php?sid=3882). Artikel ini merupakan inspirasi utama dari keinginan saya untuk bekerja menggunakan Python.

(@) *Bruce Eckel* adalah pengarang terkenal dari buku *Thinking in Java* dan *Thinking in C++*. Dia mengatakan tidak ada bahasa pemrograman yang bisa membuatnya lebih produktif selain Python. Dia bilang bahwa Python barangkali satu-satunya bahasa yang menitikberatkan pada membuat hal-hal yang lebih mudah bagi programmer. Baca [wawancara lengkapnya](http://www.artima.com/intv/aboutme.html) untuk informasi lebih detail.

(@) *Peter Norvig* adalah pengarang terkenal dari bahasa Lisp dan Direktur Kualitas Pencarian di Google (terimakasih untuk Guido van Rossum telah menunjukkannya). Dia mengatakan bahwa Python merupakan bagian integral dari Google. Anda dapat memverifikasi pernyataan ini dengan melihat halaman [Google Jobs](http://www.google.com/jobs/index.html) yang mendaftar pengetahuan Python sebagai syarat utama dari programmer perangkat lunak. 
