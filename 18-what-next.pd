# Apa Berikutnya 

Jika Anda telah membaca buku ini secara seksama hingga sekarang dan praktek membuat banyak program, maka Anda sekarang seharusnya lebih nyaman dan familiar dengan Python. Anda mungkin sudah mmebuat beberapa program Python untuk percobaan dan melatih kemampuan Python Anda. Jika belum, mulailah sekarang. Pertanyaan berikutnya adalah 'Apa Berikutnya?'

Saya sarankan Anda coba geluti masalah ini:

> Buat program *buku-alamat* berbasis perintah di mana Anda dapat menelusuri, menambah, modifikasi,menghapus atau mencari kontak yang Anda miliki seperti teman, keluarga dan rekanan serta informasi detil mereka seperti alamat email atau nomor telepon. Detailnya harus disimpan agar bisa ditampilkan di kemudian hari.

Ini cukup mudah jika Anda memikirkannya dengan mempertimbangkan berbagai hal yang telah kita pelajari sebelumnya hingga sekarang. Jika Anda masih membutuhkan petunjuk bagaimana melakukannya, berikut beberapa petunjuk.

Petunjuk (Jangan baca ini sebelum Anda mencobanya)

:   Buat sebuah _class_ untuk merepresentasikan informasi dari seseorang. Gunakan pustaka untuk menyimpan obyek person ini, dengan menggunakan namanya sebagai kunci. Gunakan modul picke untuk menyimpan obyek secara persisten ke dalam ruang penyimpanan komputer Anda. Gunakan metode baku dari pustaka untuk menambah, menghapus dan mengubah informasi dari orang tersebut.

Sekai Anda bisa melakukan ini, Anda dapat menyebut diri Anda sebagai seorang programmer Python. Lalu kirim [surel ke saya](http://www.swaroopch.com/contact/) dan berterimakasihlah terhadap buku yang bagus ini ;-). Langkah ini tidak wajib, namun dianjurkan. Juga pertimbangkan untuk membeli [versi cetak](http://www.swaroopch.com/buybook/) untuk mendukung pengembangan buku ini.

Jika program di atas menurut Anda cukup mudah, ini contoh lain yang lebih sulit:

> Implementasikan [perintah ganti](http://unixhelp.ed.ac.uk/CGI/man-cgi?replace). Perintah ini akan mengganti satu string ke dalam string yang lain di dalam daftar berkas yang diberikan.

Perintah ganti dapat dibuat secara sederhana atau rumit sesuai dengan keinginan Anda, dari substitusi string sederhana hingga pencarian pola (ekspresi reguler)

Setelah itu, berikut beberapa petunjuk untuk perjalanan Anda bersama Python:

## Kode Contoh

Cara paling baik untuk belajar bahasa pemrograman adalah dengan menulis banyak kode dan membaca banyak kode:

- [Resep Masak Python](http://code.activestate.com/recipes/langs/python/) koleksi resep atau tips yang sangat bermanfaat untuk memecahkan masalah khusus dengan menggunakan Python. Buku ini wajib-baca untuk setiap pengguna Python.
- [Modul Mingguan Python](http://www.doughellmann.com/PyMOTW/contents.html) panduan yang sangat baik dan wajib dibaca untuk [Pustaka Standar Python](#pustaka-standar).

## Tanya Jawab 

- [Lakukan dan Jangan Lakukan di Python](http://docs.python.org/py3k/howto/doanddont.html)
- [Pertanyaan Resmi yang Sering Diajukan di Python](http://www.python.org/doc/faq/general/)
- [Daftar Pertanyaan yang Jarang Ditanyakan dari Norvig](http://norvig.com/python-iaq.html)
- [Interview Tanya Jawab Python](http://dev.fyicenter.com/Interview-Questions/Python/index.html)
- [Pertanyaan di StackOverflow dengan tagar Python](http://beta.stackoverflow.com/questions/tagged/python)

## Panduan 

- [Daftar lengkap tutorial Python dari Awaretek](http://www.awaretek.com/tutorials.html)

## Video 

- [PyVideo](http://www.pyvideo.org/category)

## Diskusi 

Jika Anda terhenti karena permasalahan Python, dan tidak ada tempat bertanya, [daftar tutor-python](http://mail.python.org/mailman/listinfo/tutor) adalah tempat yang tepat untuk bertanya.

Pastikan Anda sudah mengerjakan PR Anda dan mencoba menyelesaikan sendiri terlebih dahulu sebelum bertanya.

## Berita 

Jika ingin mengikuti berita-berita terkini dari dunia Python, silakan ikuti [Planet Python Resmi](http://planet.python.org).

## Menginstal Pustaka

Ada sangat banyak pustaka kode terbuka yang tersedia di [Indeks Paket Python](http://pypi.python.org/pypi) yang dapat Anda gunakan di program Anda.

Untuk menginstal dan menggunakan pustaka ini, Anda dapat gunakan [pip](http://www.pip-installer.org/en/latest/).

## Perangkat Lunak Grafis 

Misalnya Anda ingin membuat program grafis sendiri dengan menggunakan Python. Ini dapat dilakukan dengan memanfaatkan pustaka GUI (_Graphical User Interface_/Antarmuka Pengguna Grafis) yang bisa dilekatkan pada program Python Anda. Pelekatan ini memungkinkan Anda menulis program di Python dan menggunakan pustaka yang berdiri sendiri yang ditulis dalam bahasa C atau C++ atau bahasa lainnya.

Ada banyak pilihan menggunakan GUI di Python:

Kivy

:   <http://kivy.org>

PyGTK

:   Perangkat lunak ini merupakan lekatan Python terhadap GTK+ toolkit, yang merupakan fondasi dari antar muka GNOME. GTK+ memiliki banyak aturan main untuk bisa digunakan, namun sekali Anda merasa nyaman, Anda bisa membuat aplikasi GUI secara cepat. Aplikasi desainer antar muka Glade juga sangat bagus. Dokumentasi juga diperbaiki dari waktu ke waktu. GTK+ berjalan baik di Linux meskipun portingnya ke Windows masih belum selesai. Anda dapat membuat perangkat lunak baik bebas maupun komersial dengan menggunakan GTK+. Untuk memulai, silakan baca [Panduan PyGTK](http://www.pygtk.org/tutorial.html).

PyQt

:   PyQt adalah lekatan Python terhadap kumpulan pustaka bantu Qt, yang merupakan fondasi dibangunnya KDE. Qt sangat mudah digunakan dan sangat bagus terutama dengan adanya Qt Designer dan dokumentasi Qt yang komprehensif. PyQt bebas alias gratis jika digunakan untuk membuat perangkat lunak bebas (GPL) dan Anda harus membelinya jika ingin digunakan untuk membuat perangkat lunak komersial tertutup. Mulai dari Qt 4.5 Anda juga bisa menggunakannya untuk membuat perangkat lunak non-GPL. Untuk mulai, silakan baca [Tutorial PyQt](http://zetcode.com/tutorials/pyqt4/) atau [buku PyQT](http://www.qtrac.eu/pyqtbook.html).

wxPython

:   Pustaka ini adalah lekatan Python untuk toolkit wxWidgets. wxPython memiliki kurva pembelajaran tersendiri yang terhubung dengan wxWidgets. Meskipun demikian, pustaka ini sangat portabel dan bisa dijalankan di Linux, Windos, Mac bahkan juga platform embedded. Ada banyak IDE yang tersedia untuk wxPython termasuk desainer GUI seperti [SPE (Editor Python dari Stani)](http://spe.pycs.net) dan pembangun GUI [wxGlade](http://wxglade.sourceforge.net/). Anda dapat menggunakannya untuk membuat aplikasi bebas/gratis ataupun aplikasi tertutup. Untuk memulai, silakan baca [tutorial wxPython](http://zetcode.com/wxpython/).

### Ringkasan Alat Bantu GUI 

Untuk pilihan lebih banyak, silakan lihat [halaman wiki GuiProgramming di situs web resmi dari python](http://www.python.org/cgi-bin/moinmoin/GuiProgramming).

Namun sayangnya, tidak ada yang satupun yang disebut sebagai standar GUI di Python. Saya sarankan Anda memilih salah satu dari alat-alat bantu di atas, tergantung dari kondisi Anda. Faktor pertama yang perlu dipertimbangkan adalah apakah Anda mau membayar alat bantu GUI tersebut atau tidak. Faktor kedua adalah apakah program yang Anda buat hanya bisa berjalan di Windows, Mac, Linux atau jalan di semua platform. Faktor ketiga adalah, jika Anda memilih platform Linux, apakah Anda menggunakan KDE atau GNOME sebagai lingkungan grafiknya.

Untuk analisa yang komprehensif dan detail, lihat halaman 26 dari [The Python Papers, Volume 3, Issue 1](http://archive.pythonpapers.org/ThePythonPapersVolume3Issue1.pdf).

## Berbagai Macam Penerapan 

Biasanya ada dua bagian dari bahasa pemrograman - bahasanya dan perangkat lunaknya. Bahasa adalah *bagaimana* anda menuliskan sesuatu. Sedangkan perangkat lunaknya adalah *apa* yang sebetulnya menjalankan program kita. 

Kita telah menggunakan *CPython* untuk menjalankan program kita. Hal ini sering disebut sebagai CPython sebab ditulis dalam bahasa C dan bahasa tersebut merupakan *interpreter Python Klasik*.

Ada juga perangkat lunak lain yang bisa menjalankan program Python:

[Jython](http://www.jython.org)

:   Implementasi Python yang berjalan pada platform Java. Ini berarti Anda bisa menggunakan pustaka dan kelas Java di dalam bahasa Python dan sebaliknya.

[IronPython](http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython)

:   Implementasi Python yang bisa dijalankan pada platform .NET. Ini berarti bahwa Anda bisa menggunakan pustaka dan kelas .NET di dalam bahasa Python dan sebaliknya.

[PyPy](http://codespeak.net/pypy/dist/pypy/doc/home.html)

:   Implementasi Python yang ditulis dalam bahasa Python! Ini merupakan proyek riset yang bertujuan untuk meningkatkan kecepatan dan kemudahan interpreter Python, mengingat interpreternya sendiri ditulis dalam bahasa dinamis (sebagai lawan dari bahasa statis seperti C, Java atau C#)

[Stackless Python](http://www.stackless.com)

:   Implementasi Python yang mengkhususkan diri untuk peningkatan kinerja Python berbasis thread.

Ada pula implementasi lain seperti [CLPython](http://common-lisp.net/project/clpython/) - Implementasi Python yang ditulis dalam bahasa Common Lisp dan [IronMonkey](http://wiki.mozilla.org/Tamarin:IronMonkey) merupakan porting IronPython di atas interpreter JavaScript yang berarti Anda dapat menggunakan Python (alih-alih JavaScript) untuk menulis program berbasis web ("Ajax").

Setiap implementasi ini memiliki kekhususan kegunaan untuk bidang-bidang tertentu. 

## Pemrograman Berbasis Fungsi (untuk pengguna tingkat lanjut)

Saat Anda menulis program yang lebih besar, Anda harus belajar lebih lanjut tentang pendekatan pemrograman berbasis fungsi sebagai perbandingan pada pendekatan pemrograman berbasis kelas sebagaimana yang sudah kita pelajari di [bab pemrograman berbasis obyek](#object-oriented-programming):

- [Functional Programming Howto oleh A.M. Kuchling](http://docs.python.org/dev/howto/functional.html)
- [Bab Functional Programming pada buku 'Dive Into Python'](http://www.diveintopython.net/functional_programming/index.html)
- [Presentasi Functional Programming with Python](http://ua.pycon.org/static/talks/kachayev/index.html)

## Ringkasan 

Kita telah sampai pada bagian akhir buku ini tapi, sebagaimana mereka katakan, ini adalah *awal dari yang akhir*!. Anda sekarang bisa menyebut diri Anda sebagai pengguna Python dan tanpa ragu lagi Anda sudah siap menyelesaikan masalah dengan menggunakan Python. Anda bisa mulai menggunakan komputer untuk mengerjakan segala hal yang tidak dibayangkan sebelumnya, atau menulis program _game_ Anda sendiri dan banyak lagi lainnya. Jadi, mari kita mulai!
