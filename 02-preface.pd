# Pendahuluan

Python barangkali merupakan satu dari bahasa pemrograman yang sederhana namun tangguh. Bahasa ini baik untuk pemula maupun ahli, dan yang lebih penting, sangat enak untuk digunakan untuk pemrograman.  Buku ini bertujuan untuk membantu Anda belajar bahasa yang menakjubkan ini dan menunjukkan bagaimana menyelesaikan hal-hal secara cepat tanpa kesulitan - efek dari 'Obat yang Sempurna untuk masalah pemrograman Anda'. 

## Untuk Siapa Buku ini Ditujukan 

Buku ini dapat digunakan sebagai panduan atau tutorial untuk bahasa pemrograman Python. Target utamanya adalah untuk pemula. Namun juga bermanfaat untuk programmer yang berpengalaman. 

Tujuannya adalah, jika Anda tahu bagaimana menyimpan file teks di komputer, maka Anda dapat belajar Python dari buku ini. Jika Anda punya pengalaman pemrograman sebelumnya, Anda juga dapat belajar Python dari buku ini.

Jika Anda punya pengalaman pemrograman sebelumnya, Anda akan tertarik melihat perbedaan antara Python dengan bahasa pemrograman favorit Anda - Saya menggarisbawahi cukup banyak perbedaan. Sedikit peringatan, Python akan segera akan menjadi bahasa pemrograman favorit Anda!

## Pelajaran Sejarah 

Saya mulai Python pertama kali saat saya perlu installer untuk perangkat lunak yang saya tulis bernama 'Diamond', sehingga instalasi dapat berjalan mudah. Saya harus memilih antara Python dan Perl untuk sebagai tautan pustaka QT. Saya melakukan riset kecil di web, dan menemukan [sebuah artikel oleh Eric S. Raymond](http://pythonology.org/success&story=esr), hacker terkenal dan dihormati, di mana dia bicara bagaimana Python menjadi bahasa pemrograman favoritnya. Saya juga menemukan bahwa tautan PyQT lebih matang dibandingan dengan Perl-QT. Jadi, saya memutuskan Python adalah bahasa untuk saya.

Kemudian, saya mencarai buku yang bagus tentang Python. Saya tidak dapat menemukannya! Saya temukan beberapa buku O'Reilly, namun kadang terlalu mahal atau seperti petunjuk referensi daripada panduan. Akhirnya saya menggunakan dokumentasi resmi yang ada bersama Python. Bagaimanapun juga, dokumentasi itu terlalu singkat dan kecil. Meskipun memberikan gambaran tentang Python, namun tidak lengkap. Saya bisa mengikutinya karena saya punya latar belakang pemrograman sebelumnya, tapi tentu saja dokumentasi itu tidak cocok untuk pemula.

Kira-kira setelah enam bulan sejak saya bersentuhan dengan Python, saya menginstal Linux Red Hat 9.0 dan bermain-main dengan KWord. Saya sangat senang menggunakannya, dan secara tiba-tiba saya punya ide untuk menulis beberapa hal tentang Python. Saya mulai menulis beberapa halaman, tapi kemudian berkembang menjadi 30 halaman secara cepat. Lalu, saya mulai serius untuk menjadikannya dalam bentuk buku yang bermanfaat. Saya akan mempertimbangkan buku ini sebagai kontribusi dan penghargaan saya terhadap komunitas open source. 

Buku ini dimulai dari catatan pribadi tentang Python, dan saya masih menganggap seperti itu, meskipun saya mengupayakan banyak hal agar lebih enak untuk yang lainnya :)

Dalam semangat utama pada open source, saya menerima banyak saran konstruktif, kritik dan [umpan balik](#who-reads-a-byte-of-python) dari pembaca yang antusias yang membantu banyak dalam perbaikan buku ini. 

## Status Buku 

Buku ini telah diformat ulang di Oktober 2012 menggunakan Pandoc agar memungkinkan untuk dibuat beberapa versi ebook yang disarankan pembaca, bersama perbaikan dan pembaruan. 

Perubahan di edisi Desember 2008 (dari revisi besar di Maret 2005), adalah pembaruan untuk rilis Python 3.0.

Buku ini butuh bantuan dari pembaca seperti Anda untuk menunjukkan bagian mana dari buku yang tidak bagus, tidak komprehensif, atau salah. Mohon [kirim ke pengarang utama](http:/www.swaroopch.com/contact/) atau [penerjemah](#terjemahan) dengan komentar dan saran.

## Situs Web Resmi 

Situs web resmi dari buku ini adalah <http://www.swaroopch.com/notes/Python>  di mana Anda dapat membaca seluruh buku secara online, mengunduh versi terakhir dari buku, [membeli versi cetak](http://www.swaroopch.com/buybook), dan mengirimkan umpan balik kepada saya. 

## Sesuatu Untuk Difikirkan

> Ada dua cara untuk mengonstruksi desain perangkat lunak: cara pertama adalah membuatnya sederhana sehingga jelas tidak ada kekurangan; atau membuatnya secara rumit sehingga tidak ada kekurangan yang jelas.
>
> -- C. A. R. Hoare

<!-- -->

> Keberhasilan hidup tidak banyak kaitannya terhadap bakat dan kesempatan, melainkan konsentrasi dan ketekunan.
>
> -- C. W. Wendte
